{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/0.GitHub/Github-card/src/componentes/Dashboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../Card\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [userInput, setUserInput] = useState([]);\n  const [card, setCard] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const handleUserInput = () => {\n    fetch(`https://api.github.com/repos/${userInput}`).then(response => response.json()).then(response => {\n      if (response.message === \"Not Found\") {\n        setErrorMsg(\"Erro na busca do repositório\");\n      }\n\n      setCard([...card, response]);\n    });\n    setErrorMsg(\"\");\n    setUserInput(\"\");\n\n    if (userInput === \"\") {\n      setErrorMsg(\"Erro na busca do repositório\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GitHub Card \", /*#__PURE__*/_jsxDEV(FaGithub, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pesquise por reposit\\xF3rios p\\xFAblicos no Github \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: event => setUserInput(event.target.value),\n        placeholder: \"Nome do usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: event => setUserInput(event.target.value),\n        placeholder: \"Reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserInput(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), card.message === \"Not Found\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-msg\",\n      children: \"\\\"Erro na busca do reposit\\xF3rio\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-msg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-card\",\n      children: card.filter(ele => ele.message !== \"Not Found\").map((ele, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          card: ele\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"0MSTYITkTmF8yDo7Rvq3Kl7pz/o=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/nicole/Desktop/0.GitHub/Github-card/src/componentes/Dashboard/index.js"],"names":["useState","Card","FaGithub","Dashboard","userInput","setUserInput","card","setCard","errorMsg","setErrorMsg","handleUserInput","fetch","then","response","json","message","event","target","value","filter","ele","map","index"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Card from \"../Card\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"./styles.css\";\n\nconst Dashboard = () => {\n  const [userInput, setUserInput] = useState([]);\n  const [card, setCard] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const handleUserInput = () => {\n    fetch(`https://api.github.com/repos/${userInput}`)\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.message === \"Not Found\") {\n          setErrorMsg(\"Erro na busca do repositório\");\n        }\n        setCard([...card, response]);\n      });\n    setErrorMsg(\"\");\n    setUserInput(\"\");\n    if (userInput === \"\") {\n      setErrorMsg(\"Erro na busca do repositório\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>\n        GitHub Card <FaGithub />\n      </h1>\n      <h2>Pesquise por repositórios públicos no Github </h2>\n\n      <div className=\"container-input\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(event) => setUserInput(event.target.value)}\n          placeholder=\"Nome do usuário\"\n        />\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(event) => setUserInput(event.target.value)}\n          placeholder=\"Repositório\"\n        />\n        <button onClick={() => handleUserInput()}>Search</button>\n      </div>\n      {card.message === \"Not Found\" ? (\n        <span className=\"error-msg\">\"Erro na busca do repositório\"</span>\n      ) : null}\n      <span className=\"error-msg\">{errorMsg}</span>\n      <div className=\"container-card\">\n        {card\n          .filter((ele) => ele.message !== \"Not Found\")\n          .map((ele, index) => (\n            <div key={index}>\n              {\" \"}\n              <Card card={ele} />{\" \"}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}